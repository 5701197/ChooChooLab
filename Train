//Train.java
//Creates the Train

import java.awt.*;
import java.applet.*;
import java.util.ArrayList;

public class Train
   {
      private int x; //X coordinate for train starting point
      private int xTemp; //Temp x coordinate
      private int xStart; //Initial starting x value
      private int y; //Y coordinate for train starting point
      private ArrayList<RailCar> wholeTrain; //ArrayList of RailCar objs
      private RailCar trainCar; //A RailCar obj
      private ArrayList<Integer> xVals; //ArrayList of x values for each car position
      private Integer xInt; //An Integer Obj
      private ArrayList<Color> carColors; //An ArrayList of Color objs

   public Train(int x, int y) //Constuctor
   {
      this.x = x;
      this.y = y;
      xStart = x;
      xTemp = x;
      wholeTrain = new ArrayList<RailCar>();
      xVals = new ArrayList<Integer>();
      carColors = new ArrayList<Color>();
      
      //Adds initial x value in Integer ArrayList
      xInt = new Integer(xStart);
      xVals.add(xInt);
   }

   public void addCar(String carType, Color carColor) //Adds a RailCar to the end
   {
      //Makes an RailCar obj of a specific type depending on String entered
      if(carType.equals("Caboose"))
      {
         trainCar = new Caboose(carColor,x,y);
      }
      else if(carType.equals("FreightCar"))
      {
        trainCar = new FreightCar(carColor,x,y); 
      }
      else if(carType.equals("Locomotive"))
      {
         trainCar = new Locomotive(carColor,x,y);
      }
      else if(carType.equals("PassengerCar"))
      {
         trainCar = new PassengerCar(carColor,x,y);
      }
      
      wholeTrain.add(trainCar); //Adds this obj to ArrayList
      
      x+=175; //Adds 175 to x value for every car added 

      //Adds x val into Integer ArrayList
      xInt = new Integer(x);
      xVals.add(x); 
      
      //Adds Color into Color ArrayList
      carColors.add(carColor);
    }

   public void addCar(int position, String carType, Color carColor)//Adds a RailCar to Specified Location
   {
      xTemp+=(position*175); //Makes x value correct for new car
   
      //Makes an RailCar obj of a specific type depending on String entered
      if(carType.equals("Caboose"))
      {
         trainCar = new Caboose(carColor,xTemp,y);
      }
      else if(carType.equals("FreightCar"))
      {
        trainCar = new FreightCar(carColor,xTemp,y); 
      }
      else if(carType.equals("Locomotive"))
      {
         trainCar = new Locomotive(carColor,xTemp,y);
      }
      else if(carType.equals("PassengerCar"))
      {
         trainCar = new PassengerCar(carColor,xTemp,y);
      }
      
      wholeTrain.add(position,trainCar); //Adds this obj to position in ArrayList
      
      x+=175; //Adds 175 to x value for every car added
      
      xTemp = xStart; //xTemp reset to initial x value
      
      //Adds x val into Integer ArrayList
      xInt = new Integer(x);
      xVals.add(x);
      
      //Adds Color into Color ArrayList
      carColors.add(carColor);
      //Makes sure colors are in correct order
      carColors.set(position+1,carColors.get(position));
      carColors.set(position,carColor);
      
      RailCar temp; //RailCar obj
      
      for(int k=position+1;k<=wholeTrain.size()-1;k++)//Loops for everything changed after new RailCar 
      {
         temp = wholeTrain.get(k); //Gets RailCar that was just moved (was originally in this position)
      
         //Sets old moved cars to their new x value positions
         if (temp instanceof Caboose == true)
         {
            wholeTrain.set(k,new Caboose(carColors.get(k),xVals.get(k),y));
         }
         else if(temp instanceof FreightCar == true)
         {
            wholeTrain.set(k,new FreightCar(carColors.get(k),xVals.get(k),y));
         }
         else if(temp instanceof Locomotive == true)
         {
            wholeTrain.set(k,new Locomotive(carColors.get(k),xVals.get(k),y));
         }
         else if(temp instanceof PassengerCar == true)
         {
            wholeTrain.set(k,new PassengerCar(carColors.get(k),xVals.get(k),y));
         }
      }
   }
   
   public void showCars(Graphics g) //Displays all RailCars in order
   {  
      for(RailCar finalTrain: wholeTrain)
      {
         finalTrain.drawCar(g);
      }
   }
   
}
